/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Company, Coupon, Item, Total } from "./types/index";
export { Company, Coupon, Item, Total } from "./types/index";
export namespace Components {
    interface CartItems {
        "coupons": Coupon[];
        "error": string;
        "items": Item[];
        "proceedToShipping": () => Promise<void>;
    }
    interface PaymentConfirmed {
        "data": { title: string; subtitle: string } | null;
        "error": string;
        "proceedToStore": () => void;
    }
    interface ShippingCompanies {
        "backToCart": () => void;
        "companies": Company[];
        "error": string;
        "proceedToPayment": () => Promise<void>;
        "totals": Total[];
    }
}
declare global {
    interface HTMLCartItemsElement extends Components.CartItems, HTMLStencilElement {
    }
    var HTMLCartItemsElement: {
        prototype: HTMLCartItemsElement;
        new (): HTMLCartItemsElement;
    };
    interface HTMLPaymentConfirmedElement extends Components.PaymentConfirmed, HTMLStencilElement {
    }
    var HTMLPaymentConfirmedElement: {
        prototype: HTMLPaymentConfirmedElement;
        new (): HTMLPaymentConfirmedElement;
    };
    interface HTMLShippingCompaniesElement extends Components.ShippingCompanies, HTMLStencilElement {
    }
    var HTMLShippingCompaniesElement: {
        prototype: HTMLShippingCompaniesElement;
        new (): HTMLShippingCompaniesElement;
    };
    interface HTMLElementTagNameMap {
        "cart-items": HTMLCartItemsElement;
        "payment-confirmed": HTMLPaymentConfirmedElement;
        "shipping-companies": HTMLShippingCompaniesElement;
    }
}
declare namespace LocalJSX {
    interface CartItems {
        "coupons"?: Coupon[];
        "error"?: string;
        "items"?: Item[];
        "proceedToShipping"?: () => Promise<void>;
    }
    interface PaymentConfirmed {
        "data"?: { title: string; subtitle: string } | null;
        "error"?: string;
        "proceedToStore"?: () => void;
    }
    interface ShippingCompanies {
        "backToCart"?: () => void;
        "companies"?: Company[];
        "error"?: string;
        "proceedToPayment"?: () => Promise<void>;
        "totals"?: Total[];
    }
    interface IntrinsicElements {
        "cart-items": CartItems;
        "payment-confirmed": PaymentConfirmed;
        "shipping-companies": ShippingCompanies;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cart-items": LocalJSX.CartItems & JSXBase.HTMLAttributes<HTMLCartItemsElement>;
            "payment-confirmed": LocalJSX.PaymentConfirmed & JSXBase.HTMLAttributes<HTMLPaymentConfirmedElement>;
            "shipping-companies": LocalJSX.ShippingCompanies & JSXBase.HTMLAttributes<HTMLShippingCompaniesElement>;
        }
    }
}
